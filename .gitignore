# Compiled class files and Maven build output
# This covers .class files wherever they are, and the standard 'target' directory for Maven.
target/
*.class

# Maven Wrapper related files (keep the wrapper JAR, ignore generated scripts)
# This keeps the maven-wrapper.jar so projects can build without a global Maven install.
# The !.mvn/wrapper/maven-wrapper.jar rule is crucial for this.
!.mvn/wrapper/maven-wrapper.jar

# Exclude build directories within source folders, which is usually not desired
# These are often used for module-specific builds, but typically you'd want to ignore them
# unless there's a specific reason for them to be committed (rare).
!**/src/main/**/target/
!**/src/test/**/target/

# IntelliJ IDEA specific files
# The .idea/ directory itself should be ignored. Files within it are usually implicitly ignored.
# Explicitly listing some files can be helpful for clarity or if there are exceptions.
.idea/
# The following individual files are usually within .idea/ and are redundant if .idea/ is ignored,
# but keeping them for clarity doesn't hurt.
# .idea/modules.xml
# .idea/jarRepositories.xml
# .idea/compiler.xml
# .idea/libraries/  # This ignores the 'libraries' directory inside .idea/
*.iws
*.iml
*.ipr

# Eclipse specific files
.apt_generated/ # Annotation processing output
.classpath
.factorypath
.project
.settings/ # Directory for project settings
.springBeans # Often generated by STS for Spring projects
.sts4-cache/ # Spring Tools Suite 4 cache

# NetBeans specific files
/nbproject/private/ # Private project files
/nbbuild/
/dist/
/nbdist/
/.nb-gradle/
build/ # NetBeans build output directory
# These are exceptions for build directories within source folders for NetBeans
!**/src/main/**/build/
!**/src/test/**/build/

# VS Code specific files
.vscode/ # VS Code workspace and task settings

# Operating System specific files
.DS_Store # macOS directory services store
Thumbs.db # Windows thumbnail cache